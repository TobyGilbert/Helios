OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface ward	%meta{string,description,"Ward specular material"} 
<<<<<<< HEAD
param	float	Ks	1		%meta{string,description,"Specular scaling"} %meta{float,UImin,0} %meta{float,UIsoftmax,1}  %read{5,5} %write{2147483647,-1}
param	float	ax	0.5		%meta{string,description,"X roughness (lower is sharper)"} %meta{float,UImin,0} %meta{float,UIsoftmax,1}  %read{2147483647,-1} %write{2147483647,-1}
param	float	ay	0.1		%meta{string,description,"Y roughness (lower is sharper)"} %meta{float,UImin,0} %meta{float,UIsoftmax,1}  %read{2147483647,-1} %write{2147483647,-1}
param	color	Cs	1 1 1		%meta{string,description,"Base color"} %meta{float,UImin,0} %meta{float,UImax,1}  %read{5,5} %write{2147483647,-1}
param	normal	norm	1 0 0		%read{0,4} %write{2147483647,-1}
global	vector	dPdu	%read{1,1} %write{2147483647,-1}
global	closure color	Ci	%read{2147483647,-1} %write{6,6}
local	color	anist	%read{2,3} %write{0,0}
temp	closure color	$tmp1	%read{6,6} %write{4,4}
temp	vector	$tmp2	%read{4,4} %write{1,1}
const	int	$const1	0		%read{2,2} %write{2147483647,-1}
temp	float	$tmp3	%read{4,4} %write{2,2}
const	int	$const2	2		%read{3,3} %write{2147483647,-1}
temp	float	$tmp4	%read{4,4} %write{3,3}
const	string	$const3	"ward"		%read{4,4} %write{2147483647,-1}
temp	color	$tmp5	%read{6,6} %write{5,5}
=======
param	float	Ks	1		%meta{string,description,"Specular scaling"} %meta{float,UImin,0} %meta{float,UIsoftmax,1}  %read{2147483647,-1} %write{2147483647,-1}
param	float	ax	0.5		%meta{string,description,"X roughness (lower is sharper)"} %meta{float,UImin,0} %meta{float,UIsoftmax,1}  %read{3,3} %write{2147483647,-1}
param	float	ay	0.1		%meta{string,description,"Y roughness (lower is sharper)"} %meta{float,UImin,0} %meta{float,UIsoftmax,1}  %read{3,3} %write{2147483647,-1}
param	color	Cs	1 1 1		%meta{string,description,"Base color"} %meta{float,UImin,0} %meta{float,UImax,1}  %read{2147483647,-1} %write{2147483647,-1}
global	normal	N	%read{0,3} %write{2147483647,-1}
global	vector	dPdu	%read{2,2} %write{2147483647,-1}
global	closure color	Ci	%read{2147483647,-1} %write{5,5}
temp	closure color	$tmp1	%read{1,1} %write{0,0}
const	string	$const1	"diffuse"		%read{0,0} %write{2147483647,-1}
const	float	$const2	0.5		%read{1,1} %write{2147483647,-1}
temp	closure color	$tmp2	%read{5,5} %write{1,1}
temp	closure color	$tmp3	%read{4,4} %write{3,3}
temp	vector	$tmp4	%read{3,3} %write{2,2}
const	string	$const3	"ward"		%read{3,3} %write{2147483647,-1}
const	float	$const4	0.2		%read{4,4} %write{2147483647,-1}
temp	closure color	$tmp5	%read{5,5} %write{4,4}
>>>>>>> 49dfd879f26664e3362faece040b34b1eaa7fed5
code ___main___
# <buffer>:20
# <not found>
<<<<<<< HEAD
	assign		anist norm 	%filename{"<buffer>"} %line{20} %argrw{"wr"}
# <buffer>:21
# <not found>
	normalize	$tmp2 dPdu 	%line{21} %argrw{"wr"}
	compref		$tmp3 anist $const1 	%argrw{"wrr"}
	compref		$tmp4 anist $const2 	%argrw{"wrr"}
	closure		$tmp1 $const3 norm $tmp2 $tmp3 $tmp4 	%argrw{"wrrrrr"}
	mul		$tmp5 Ks Cs 	%argrw{"wrr"}
	mul		Ci $tmp1 $tmp5 	%argrw{"wrr"}
=======
	closure		$tmp1 $const1 N 	%filename{"<buffer>"} %line{19} %argrw{"wrr"}
	mul		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	normalize	$tmp4 dPdu 	%argrw{"wr"}
	closure		$tmp3 $const3 N $tmp4 ax ay 	%argrw{"wrrrrr"}
	mul		$tmp5 $tmp3 $const4 	%argrw{"wrr"}
	add		Ci $tmp2 $tmp5 	%argrw{"wrr"}
>>>>>>> 49dfd879f26664e3362faece040b34b1eaa7fed5
	end
