#ifndef IMAGENODEPROXYWIDGET_H
#define IMAGENODEPROXYWIDGET_H

#include <QGraphicsItem>
#include <optixu/optixpp_namespace.h>
#include "AbstractNodeProxyWidget.h"
#include <NodeGraph/qneport.h>
#include <QLabel>
#include <QGroupBox>


class ImageNodeProxyWidget : public AbstractNodeProxyWidget
{
    Q_OBJECT
public:
    ImageNodeProxyWidget(QNEPort *_portConnected,optix::Material &_mat,QGraphicsItem *parent = 0);
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief default destructor
    //------------------------------------------------------------------------------------------------------------------------------------
    ~ImageNodeProxyWidget();
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief mutator to the width and height of our image
    //------------------------------------------------------------------------------------------------------------------------------------
    inline void setImageSize(int _width,int _height){m_imgLabel->setMaximumWidth(_width); m_imgLabel->setMaximumHeight(_height);}
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief overite our setLinkedVar function to put our own functionality in
    //------------------------------------------------------------------------------------------------------------------------------------
    void setLinkedVar();
    //------------------------------------------------------------------------------------------------------------------------------------

public slots:
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief slot to import an image to our node
    //------------------------------------------------------------------------------------------------------------------------------------
    void getImage();
    //------------------------------------------------------------------------------------------------------------------------------------
private:
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief our optix texture
    //------------------------------------------------------------------------------------------------------------------------------------
    optix::TextureSampler m_texure;
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief label widget to hold our image
    //------------------------------------------------------------------------------------------------------------------------------------
    QLabel *m_imgLabel;
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief our group box
    //------------------------------------------------------------------------------------------------------------------------------------
    QGroupBox *m_groupBox;
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief bool to indicate if we have a texture created
    //------------------------------------------------------------------------------------------------------------------------------------
    bool m_imgCreated;
    //------------------------------------------------------------------------------------------------------------------------------------
};

#endif // IMAGENODEPROXYWIDGET_H
