#ifndef OSLABSTRACTVARBLOCK_H
#define OSLABSTRACTVARBLOCK_H

#include "NodeGraph/qneblock.h"
#include <optixu/optixpp_namespace.h>
#include <QDoubleSpinBox>
#include <QGraphicsScene>
#include "AbstractNodeProxyWidget.h"

class   OSLAbstractVarBlock : public QNEBlock
{
public:
    //this means you can define a new QGraphicsItem type. Woudln't of done it like this myself.
    enum { Type = QGraphicsItem::UserType + 5 };
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief default constructor
    //------------------------------------------------------------------------------------------------------------------------------------
    OSLAbstractVarBlock(QGraphicsScene *_scene,optix::Material &_mat,QGraphicsItem * parent = 0);
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief default destuctor
    //------------------------------------------------------------------------------------------------------------------------------------
    ~OSLAbstractVarBlock(){}
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief Set the name of our variable block
    /// @param _name - desired name
    //------------------------------------------------------------------------------------------------------------------------------------
    QNEPort *setBlockName(std::string _name);
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief overiden virtual function to return the block name
    //------------------------------------------------------------------------------------------------------------------------------------
    inline std::string getBlockName(){return m_blockName;}
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief manualy set whatever our block variable is linked to to
    //------------------------------------------------------------------------------------------------------------------------------------
    inline void setLinkedVar(){m_widgetProxy->setLinkedVar();}
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief returns the type of our class
    //------------------------------------------------------------------------------------------------------------------------------------
    int type() const { return Type; }
    //------------------------------------------------------------------------------------------------------------------------------------
protected:
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief the material which out variable belongs to
    //------------------------------------------------------------------------------------------------------------------------------------
    optix::Material m_material;
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief a member to hold our widget proxy
    //------------------------------------------------------------------------------------------------------------------------------------
    AbstractNodeProxyWidget *m_widgetProxy;
    //------------------------------------------------------------------------------------------------------------------------------------
    /// @brief menber to store our block name
    //------------------------------------------------------------------------------------------------------------------------------------
    std::string m_blockName;
    //------------------------------------------------------------------------------------------------------------------------------------


};


#endif // OSLABSTRACTVARBLOCK_H
