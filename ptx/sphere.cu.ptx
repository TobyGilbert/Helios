//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Fri Sep  5 05:40:32 2014 (1409892032)
// Cuda compilation tools, release 6.5, V6.5.19
//

.version 4.1
.target sm_50
.address_size 64

.global .align 16 .b8 sphere[16];
.global .align 4 .b8 texcoord[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 shading_normal[12];
.global .align 4 .u32 lgt_idx;
.global .align 4 .b8 ray[36];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo6sphereE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7lgt_idxE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6sphereE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7lgt_idxE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum6sphereE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7lgt_idxE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic6sphereE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic7lgt_idxE[18] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 108, 103, 116, 95, 105, 100, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation6sphereE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7lgt_idxE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .entry _Z16intersect_spherei(
	.param .u32 _Z16intersect_spherei_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<62>;


	ld.global.f32 	%f12, [ray];
	ld.global.v4.f32 	{%f13, %f14, %f15, %f16}, [sphere];
	sub.ftz.f32 	%f1, %f12, %f13;
	ld.global.f32 	%f18, [ray+4];
	sub.ftz.f32 	%f2, %f18, %f14;
	ld.global.f32 	%f20, [ray+8];
	sub.ftz.f32 	%f3, %f20, %f15;
	ld.global.f32 	%f22, [ray+12];
	ld.global.f32 	%f23, [ray+16];
	mul.ftz.f32 	%f24, %f23, %f23;
	fma.rn.ftz.f32 	%f25, %f22, %f22, %f24;
	ld.global.f32 	%f26, [ray+20];
	fma.rn.ftz.f32 	%f4, %f26, %f26, %f25;
	mul.ftz.f32 	%f27, %f23, %f2;
	fma.rn.ftz.f32 	%f28, %f22, %f1, %f27;
	fma.rn.ftz.f32 	%f29, %f26, %f3, %f28;
	add.ftz.f32 	%f5, %f29, %f29;
	mul.ftz.f32 	%f30, %f2, %f2;
	fma.rn.ftz.f32 	%f31, %f1, %f1, %f30;
	fma.rn.ftz.f32 	%f32, %f3, %f3, %f31;
	mul.ftz.f32 	%f33, %f16, %f16;
	sub.ftz.f32 	%f34, %f32, %f33;
	mul.ftz.f32 	%f35, %f4, 0fC0800000;
	mul.ftz.f32 	%f36, %f35, %f34;
	fma.rn.ftz.f32 	%f7, %f5, %f5, %f36;
	setp.leu.ftz.f32	%p1, %f7, 0f00000000;
	@%p1 bra 	BB5_5;

	sqrt.approx.ftz.f32 	%f8, %f7;
	neg.ftz.f32 	%f38, %f5;
	sub.ftz.f32 	%f39, %f38, %f8;
	add.ftz.f32 	%f9, %f4, %f4;
	div.approx.ftz.f32 	%f37, %f39, %f9;
	// inline asm
	call (%r1), _rt_potential_intersection, (%f37);
	// inline asm
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB5_3;

	ld.global.f32 	%f40, [ray+12];
	ld.global.f32 	%f41, [ray+16];
	ld.global.f32 	%f42, [ray+20];
	fma.rn.ftz.f32 	%f43, %f40, %f37, %f1;
	fma.rn.ftz.f32 	%f44, %f41, %f37, %f2;
	fma.rn.ftz.f32 	%f45, %f42, %f37, %f3;
	rcp.approx.ftz.f32 	%f46, %f16;
	mul.ftz.f32 	%f47, %f45, %f46;
	mul.ftz.f32 	%f48, %f44, %f46;
	mul.ftz.f32 	%f49, %f43, %f46;
	st.global.v2.f32 	[geometric_normal], {%f49, %f48};
	st.global.f32 	[geometric_normal+8], %f47;
	st.global.v2.f32 	[shading_normal], {%f49, %f48};
	st.global.f32 	[shading_normal+8], %f47;
	mov.u32 	%r3, 0;
	// inline asm
	call (%r2), _rt_report_intersection, (%r3);
	// inline asm
	setp.ne.s32	%p3, %r2, 0;
	@%p3 bra 	BB5_5;

BB5_3:
	sub.ftz.f32 	%f51, %f8, %f5;
	div.approx.ftz.f32 	%f50, %f51, %f9;
	// inline asm
	call (%r4), _rt_potential_intersection, (%f50);
	// inline asm
	setp.eq.s32	%p4, %r4, 0;
	@%p4 bra 	BB5_5;

	ld.global.f32 	%f52, [ray+12];
	ld.global.f32 	%f53, [ray+16];
	ld.global.f32 	%f54, [ray+20];
	fma.rn.ftz.f32 	%f55, %f52, %f50, %f1;
	fma.rn.ftz.f32 	%f56, %f53, %f50, %f2;
	fma.rn.ftz.f32 	%f57, %f54, %f50, %f3;
	rcp.approx.ftz.f32 	%f58, %f16;
	mul.ftz.f32 	%f59, %f57, %f58;
	mul.ftz.f32 	%f60, %f56, %f58;
	mul.ftz.f32 	%f61, %f55, %f58;
	st.global.v2.f32 	[geometric_normal], {%f61, %f60};
	st.global.f32 	[geometric_normal+8], %f59;
	st.global.v2.f32 	[shading_normal], {%f61, %f60};
	st.global.f32 	[shading_normal+8], %f59;
	mov.u32 	%r6, 0;
	// inline asm
	call (%r5), _rt_report_intersection, (%r6);
	// inline asm

BB5_5:
	ret;
}

.visible .entry _Z13bounds_sphereiPf(
	.param .u32 _Z13bounds_sphereiPf_param_0,
	.param .u64 _Z13bounds_sphereiPf_param_1
)
{
	.reg .f32 	%f<15>;
	.reg .s64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z13bounds_sphereiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	ld.global.v4.f32 	{%f1, %f2, %f3, %f4}, [sphere];
	sub.ftz.f32 	%f7, %f1, %f4;
	sub.ftz.f32 	%f9, %f2, %f4;
	sub.ftz.f32 	%f11, %f3, %f4;
	add.ftz.f32 	%f12, %f1, %f4;
	add.ftz.f32 	%f13, %f2, %f4;
	add.ftz.f32 	%f14, %f3, %f4;
	st.global.f32 	[%rd2], %f7;
	st.global.f32 	[%rd2+4], %f9;
	st.global.f32 	[%rd2+8], %f11;
	st.global.f32 	[%rd2+12], %f12;
	st.global.f32 	[%rd2+16], %f13;
	st.global.f32 	[%rd2+20], %f14;
	ret;
}

.visible .func _ZN5optix3RayC1Ev(
	.param .b64 _ZN5optix3RayC1Ev_param_0
)
{



	ret;
}

.visible .func _ZN5optix3RayC2Ev(
	.param .b64 _ZN5optix3RayC2Ev_param_0
)
{



	ret;
}


