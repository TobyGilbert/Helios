//
// Generated by NVIDIA NVVM Compiler
<<<<<<< HEAD
// Compiler built on Fri Jun 20 01:24:09 2014 (1403223849)
// Cuda compilation tools, release 6.5, V6.5.10
//

.version 4.1
.target sm_30
=======
// Compiler built on Fri Sep  5 05:40:32 2014 (1409892032)
// Cuda compilation tools, release 6.5, V6.5.19
//

.version 4.1
.target sm_50
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f
.address_size 64

.global .align 8 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 1 .b8 output_buffer[1];
.global .align 8 .b8 top_object[4];
.global .align 4 .u32 radiance_ray_type;
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .f32 time_view_scale = 0f358637BD;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17radiance_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15time_view_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17radiance_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15time_view_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17radiance_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15time_view_scaleE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15time_view_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15time_view_scaleE[1];
.global .align 1 .b8 $str[47] = {67, 97, 117, 103, 104, 116, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

<<<<<<< HEAD
=======
.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f
.visible .entry _Z14pinhole_camerav(

)
{
<<<<<<< HEAD
	.local .align 8 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<46>;
	.reg .s32 	%r<20>;
	.reg .s64 	%rd<9>;


	mov.u64 	%SPL, __local_depot0;
=======
	.local .align 8 .b8 	__local_depot5[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<20>;
	.reg .f32 	%f<46>;
	.reg .s64 	%rd<9>;


	mov.u64 	%SPL, __local_depot5;
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd8, %rd1;
	ld.global.v2.u32 	{%r6, %r7}, [launch_index];
	cvt.rn.f32.u32	%f9, %r6;
	cvt.rn.f32.u32	%f10, %r7;
	ld.global.v2.u32 	{%r10, %r11}, [launch_dim];
	cvt.rn.f32.u32	%f11, %r10;
	cvt.rn.f32.u32	%f12, %r11;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.f32 	%f3, [eye+8];
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ld.global.f32 	%f19, [U];
	ld.global.f32 	%f20, [U+4];
	ld.global.f32 	%f21, [U+8];
	ld.global.f32 	%f22, [V];
	mul.ftz.f32 	%f23, %f22, %f16;
	ld.global.f32 	%f24, [V+4];
	mul.ftz.f32 	%f25, %f24, %f16;
	ld.global.f32 	%f26, [V+8];
	mul.ftz.f32 	%f27, %f26, %f16;
	fma.rn.ftz.f32 	%f28, %f19, %f15, %f23;
	fma.rn.ftz.f32 	%f29, %f20, %f15, %f25;
	fma.rn.ftz.f32 	%f30, %f21, %f15, %f27;
	ld.global.f32 	%f31, [W];
	add.ftz.f32 	%f32, %f28, %f31;
	ld.global.f32 	%f33, [W+4];
	add.ftz.f32 	%f34, %f29, %f33;
	ld.global.f32 	%f35, [W+8];
	add.ftz.f32 	%f36, %f30, %f35;
	mul.ftz.f32 	%f37, %f34, %f34;
	fma.rn.ftz.f32 	%f38, %f32, %f32, %f37;
	fma.rn.ftz.f32 	%f39, %f36, %f36, %f38;
	sqrt.approx.ftz.f32 	%f40, %f39;
	rcp.approx.ftz.f32 	%f41, %f40;
	mul.ftz.f32 	%f4, %f32, %f41;
	mul.ftz.f32 	%f5, %f34, %f41;
	mul.ftz.f32 	%f6, %f36, %f41;
	ld.global.u32 	%r2, [radiance_ray_type];
	ld.global.f32 	%f7, [scene_epsilon];
	mov.u32 	%r14, 1065353216;
	st.local.u32 	[%rd8+12], %r14;
	mov.u32 	%r15, 0;
	st.local.u32 	[%rd8+16], %r15;
	ld.global.u32 	%r1, [top_object];
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r3, 20;
	// inline asm
	call _rt_trace_64, (%r1, %f17, %f18, %f3, %f4, %f5, %f6, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	cvta.global.u64 	%rd3, output_buffer;
	ld.global.v2.u32 	{%r16, %r17}, [launch_index];
	cvt.u64.u32	%rd4, %r16;
	cvt.u64.u32	%rd5, %r17;
	mov.u32 	%r4, 2;
	mov.u32 	%r5, 16;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r4, %r5, %rd4, %rd5, %rd7, %rd7);
	// inline asm
	ld.local.f32 	%f42, [%rd8+8];
	ld.local.f32 	%f43, [%rd8+4];
	ld.local.f32 	%f44, [%rd8];
	mov.f32 	%f45, 0f3F800000;
	st.v4.f32 	[%rd2], {%f44, %f43, %f42, %f45};
	ret;
}

.visible .entry _Z9exceptionv(

)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
<<<<<<< HEAD
	.reg .f32 	%f<5>;
	.reg .s32 	%r<31>;
=======
	.reg .s32 	%r<31>;
	.reg .f32 	%f<5>;
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f
	.reg .s64 	%rd<17>;


	// inline asm
	call (%r5), _rt_get_exception_code, ();
	// inline asm
	cvta.global.u64 	%rd1, $str;
	ld.global.v2.u32 	{%r7, %r8}, [launch_index];
	// inline asm
	call (%r6), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r6, 0;
	mov.u64 	%rd16, $str;
<<<<<<< HEAD
	@%p1 bra 	BB1_5;

	mov.u64 	%rd15, %rd1;

BB1_2:
=======
	@%p1 bra 	BB6_5;

	mov.u64 	%rd15, %rd1;

BB6_2:
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f
	mov.u64 	%rd3, %rd16;
	mov.u64 	%rd2, %rd15;
	add.s64 	%rd4, %rd2, 1;
	add.s64 	%rd16, %rd3, 1;
	ld.global.u8 	%rs1, [%rd3+1];
	setp.ne.s16	%p2, %rs1, 0;
	mov.u64 	%rd15, %rd4;
<<<<<<< HEAD
	@%p2 bra 	BB1_2;
=======
	@%p2 bra 	BB6_2;
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f

	sub.s64 	%rd8, %rd4, %rd1;
	cvt.u32.u64	%r11, %rd8;
	add.s32 	%r12, %r11, 32;
	and.b32  	%r10, %r12, -4;
	// inline asm
	call (%r9), _rt_print_start_64, (%rd1, %r10);
	// inline asm
	setp.eq.s32	%p3, %r9, 0;
<<<<<<< HEAD
	@%p3 bra 	BB1_5;
=======
	@%p3 bra 	BB6_5;
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f

	mov.u32 	%r21, 0;
	// inline asm
	call (), _rt_print_write32, (%r21, %r9);
	// inline asm
	add.s32 	%r16, %r9, 4;
	// inline asm
	call (), _rt_print_write32, (%r5, %r16);
	// inline asm
	add.s32 	%r18, %r9, 8;
	// inline asm
	call (), _rt_print_write32, (%r21, %r18);
	// inline asm
	add.s32 	%r20, %r9, 12;
	// inline asm
	call (), _rt_print_write32, (%r7, %r20);
	// inline asm
	add.s32 	%r22, %r9, 16;
	// inline asm
	call (), _rt_print_write32, (%r21, %r22);
	// inline asm
	add.s32 	%r24, %r9, 20;
	// inline asm
	call (), _rt_print_write32, (%r8, %r24);
	// inline asm

<<<<<<< HEAD
BB1_5:
=======
BB6_5:
>>>>>>> bb758e46d65476f937c60f1b9750277a525f4c0f
	cvta.global.u64 	%rd10, output_buffer;
	ld.global.v2.u32 	{%r27, %r28}, [launch_index];
	cvt.u64.u32	%rd11, %r27;
	cvt.u64.u32	%rd12, %r28;
	mov.u32 	%r25, 2;
	mov.u32 	%r26, 16;
	mov.u64 	%rd14, 0;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r25, %r26, %rd11, %rd12, %rd14, %rd14);
	// inline asm
	mov.f32 	%f1, 0f3F800000;
	ld.global.f32 	%f2, [bad_color+8];
	ld.global.f32 	%f3, [bad_color+4];
	ld.global.f32 	%f4, [bad_color];
	st.v4.f32 	[%rd9], {%f4, %f3, %f2, %f1};
	ret;
}


